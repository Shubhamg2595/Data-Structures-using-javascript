/**Number Algorithms in javascript.
 * 
 * 
 * 1. Primality Test
 * 
 */

/*
function isPrime(n) {
 if (n < 2) {
   return false;
 }
 for (let i = 2; i <= Math.sqrt(n); i++) {
   if (n % i == 0) {
     return false;
   }
 }
 return true;

}

console.log('isPrime',isPrime(31));
console.log('isPrime',isPrime(71))
console.log('isPrime',isPrime(72))
*/

// ! Time Complexity: O(sqrt(n))
// The time complexity is O(n) because this algorithm checks all numbers from 0 to n.

// Optimizing above code.

// This is difficult to notice, but all primes are of the form 6k ± 1, with the exception of
// 2 and 3 where k is some integer. Here’s an example:
// 5 = (6-1) , 7 = ((1*6) + 1), 13 = ((2*6) + 1) etc

// Also realize that, for testing the prime number n, the loop only has to test until the
// square root of n. This is because if the square root of n is not a prime number, n is not a
// prime number by mathematical definition.


/*
function isPrime(n) {
  if (n < 2) {
    return false;
  }
  if (n < 4) {
    return false;
  }

  if (n % 2 === 0 || n % 3 === 0) {
    return false;
  }
  25 <= 89
  for (let i = 5; i * i <= n; i += 6) {
    if(n%i === 0 || n%(i+2) === 0)
      return false;
  }
  return true;

}


above solution is goood, but does not help in reducing time complexity in any way
console.log('isPrime', isPrime(31));
console.log('isPrime', isPrime(71))
console.log('isPrime', isPrime(72))
*/



/************************************************************************/
/**
 * Prime Factorization
 *
 */


 /*
function findPrimeFactors(n) {
  let primeFactors = [];

  let originalNumber = n;

  while (n % 2 === 0) {
    primeFactors.push(2);
    n = parseInt(n / 2);
  }


  for (let i = 3; i < Math.sqrt(originalNumber); i += 2) {
    while (n % i === 0) {
      primeFactors.push(i);
      n = parseInt(n / i);
    }
  }

  if(n>2)
  {
    primeFactors.push(n)
  }

  return primeFactors;

}

console.log('Primefactors are', findPrimeFactors(4))
console.log('Primefactors are', findPrimeFactors(10))
console.log('Primefactors are', findPrimeFactors(625))


Time Complexity: O(sqrt(n))

*/

/************************************************************************/
/**
 *Random Number Generator
 */

// Add or subtract from it to set the base.
// Math.random() * 100; // floats between 0 and 100
// Math.random() * 25 + 5; // floats between 5 and 30
// Math.random() * 10 - 100; // floats between -100 and -90
// To get random integers, simply use Math.floor(), Math.round(), or Math.ceil() to
// round to an integer.
// Math.floor(Math.random() * 100); // integer between 0 and 99
// Math.round(Math.random() * 25) + 5; // integer between 5 and 30
// Math.ceil(Math.random() * 10) - 100; // integer between -100 and -90



/************************************************************************/
/**
 *  Print all primes less than n
 */


function isPrime(n) {
    if (n < 2) {
      return false;
    }
    for (let i = 2; i <= Math.sqrt(n); i++) {
      if (n % i == 0) {
        return false;
      }
    }
    return true;
   
   }
  
   function findAllPrimes(n)
   {
     let primes = [];
     for(let i=0;i<n;i++)
    {
      if(isPrime(i))
      {
        primes.push(i);
      }
    }
  
    return primes;
   }
  
   console.log('all primes are', findAllPrimes(4))
   console.log('all primes are', findAllPrimes(10))
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  /**
   *
   */
  
  
  
  
  
  /************************************************************************/
  